{"version":3,"file":"definitions.js","sourceRoot":"","sources":["../../src/definitions.ts"],"names":[],"mappings":"","sourcesContent":["import type { PermissionState } from '@capacitor/core';\n\nexport interface PermissionStatus {\n  readSimCard: PermissionState;\n}\n\nexport interface SimPlugin {\n  /**\n   * Get information from device's sim cards.\n   *\n   * @since 1.0.0\n   */\n  getSimCards(): Promise<GetSimCardsResult>;\n\n  /**\n   * Check permission to get information from device's sim cards.\n   *\n   * On iOS the status is always granted.\n   *\n   * @since 1.0.0\n   */\n  checkPermissions(): Promise<PermissionStatus>;\n\n  /**\n   * Request permission to get information from device's sim cards.\n   *\n   * On iOS the status is always granted.\n   *\n   * @since 1.0.0\n   */\n  requestPermissions(): Promise<PermissionStatus>;\n}\n\nexport interface GetSimCardsResult {\n  simCards: SimCard[];\n}\n\nexport interface SimCard {\n  /**\n   * Android only: Phone number.\n   *\n   * @since 1.0.0\n   */\n  number?: string;\n\n  /**\n   * iOS only: If this carrier allows VOIP calls to be made on its network.\n   *\n   * @since 1.0.0\n   */\n  allowsVOIP?: boolean;\n\n  /**\n   * The name of the cellular service provider.\n   *\n   * @since 1.0.0\n   */\n  carrierName: string;\n\n  /**\n   * Country code for the cellular service provider,\n   * represented as an ISO 3166-1 country code string.\n   *\n   * @since 1.0.0\n   */\n  isoCountryCode: string;\n\n  /**\n   * Mobile country code (MCC) for the cellular service provider,\n   * in its numeric representation.\n   *\n   * @since 1.0.0\n   */\n  mobileCountryCode: string;\n\n  /**\n   * Mobile network code (MNC) for the cellular service provider,\n   * in its numeric representation.\n   *\n   * @since 1.0.0\n   */\n  mobileNetworkCode: string;\n}\n"]}